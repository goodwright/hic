{
    "inputs": [
        {
            "name": "Sample options",
            "description": "The samples to process.",
            "advanced": false,
            "params": {
                "input": {
                    "name": "Samples",
                    "description": "The samples to process.",
                    "required": true,
                    "type": "csv",
                    "takes_samples": true,
                    "sample_types": ["Hi-C"],
                    "columns": [
                        {
                            "name": "sample",
                            "type": "string",
                            "from_sample": "name",
                            "required": true,
                            "render": false
                        },
                        {
                            "name": "fastq_1",
                            "type": "data",
                            "from_sample": 1,
                            "required": true,
                            "render": false
                        },
                        {
                            "name": "fastq_2",
                            "type": "data",
                            "from_sample": 2,
                            "required": false,
                            "render": false
                        }
                    ]
                }
            }
        },
        {
            "name": "Reference genome options",
            "description": "Reference genome related files and options required for the workflow.",
            "advanced": false,
            "from_execution": true,
            "params": {
                "fasta": {
                "name": "FASTA",
                    "type": "data",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "required": true,
                    "execution_output": {
                        "process": null,
                        "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$"
                    },
                    "description": "A raw genome FASTA file."
                },
                "bwt2_index": {
                    "name": "Small RNA Bowtie index",
                    "type": "data",
                    "pattern": "",
                    "required": false,
                    "execution_output": {
                        "process": "BOWTIE2_BUILD",
                        "pattern": ""
                    },
                    "description": "A bowtie genome index."
                },
                "chromosome_size": {
                    "name": "Chromosome sizes",
                    "type": "data",
                    "pattern": "^\\S+\\.sizes$",
                    "required": false,
                    "execution_output": {
                        "process": "CUSTOM_GETCHROMSIZES",
                        "pattern": "^\\S+\\.sizes$"
                    },
                    "description": "Chromosome sizes information."
                }
            }
        },
        {
            "name": "Digestion Hi-C",
            "description": "Parameters for protocols based on restriction enzyme",
            "advanced": true,
            "params": {
                "restriction_fragments": {
                    "name": "Restriction Fragments",
                    "type": "data",
                    "description": "Restriction fragment (bed) file.",
                    "pattern": "^\\S+\\.bed$",
                    "required": false
                },
                "digestion": {
                    "name": "Digestion",
                    "type": "string",
                    "description": "Name of restriction enzyme to automatically set the restriction_site and ligation_site options (hindiii, mboi, dpnii, arima)",
                    "valid": [
                        "hindiii",
                        "mboi",
                        "dpnii",
                        "arima"
                    ],
                    "default": "dpnii"
                },
                "restriction_site": {
                    "name": "Restriction Site",
                    "type": "string",
                    "default": "",
                    "description": "Restriction motifs used during digestion. Several motifs (comma separated) can be provided."
                },
                "ligation_site": {
                    "name": "Ligation Site",
                    "type": "string",
                    "default": "",
                    "description": "Expected motif after DNA ligation.  Several motifs (comma separated) can be provided."
                },
                "save_reference": {
                    "name": "Save Reference",
                    "type": "boolean",
                    "description": "If generated by the pipeline save the annotation and indexes in the results directory."
                }
            }
        },
        {
            "name": "DNAse Hi-C",
            "description": "Parameters for protocols based on DNAse digestion",
            "advanced": true,
            "params": {
                "dnase": {
                    "name": "Dnase",
                    "type": "boolean",
                    "description": "For Hi-C protocols which are not based on enzyme digestion such as DNase Hi-C"
                },
                "min_cis_dist": {
                    "name": "Min Cis Dist",
                    "type": "number",
                    "description": "Minimum distance between loci to consider. Useful for --dnase mode to remove spurious ligation products. Only values > 0 are considered"
                }
            }
        },
        {
            "name": "Alignments",
            "description": "Parameters for reads aligments",
            "advanced": true,
            "params": {
                "split_fastq": {
                    "name": "Split Fastq",
                    "type": "boolean",
                    "description": "Split the reads into chunks before running the pipelne"
                },
                "fastq_chunks_size": {
                    "name": "Fastq Chunks Size",
                    "type": "number",
                    "description": "Read number per chunks if split_fastq is used",
                    "default": 20000000
                },
                "min_mapq": {
                    "name": "Min Mapq",
                    "type": "number",
                    "default": 10,
                    "description": "Keep aligned reads with a minimum quality value"
                },
                "bwt2_opts_end2end": {
                    "name": "Bwt2 Opts End2End",
                    "type": "string",
                    "default": "'--very-sensitive -L 30 --score-min L,-0.6,-0.2 --end-to-end --reorder'",
                    "description": "Option for HiC-Pro end-to-end bowtie mapping"
                },
                "bwt2_opts_trimmed": {
                    "name": "Bwt2 Opts Trimmed",
                    "type": "string",
                    "default": "'--very-sensitive -L 20 --score-min L,-0.6,-0.2 --end-to-end --reorder'",
                    "description": "Option for HiC-Pro trimmed reads mapping"
                },
                "save_aligned_intermediates": {
                    "name": "Save Aligned Intermediates",
                    "type": "boolean",
                    "description": "Save all BAM files during two-steps mapping"
                }
            }
        },
        {
            "name": "Valid Pairs Detection",
            "description": "Options to call significant interactions",
            "advanced": true,
            "params": {
                "keep_dups": {
                    "name": "Keep Dups",
                    "type": "boolean",
                    "description": "Keep duplicated reads"
                },
                "keep_multi": {
                    "name": "Keep Multi",
                    "type": "boolean",
                    "description": "Keep multi-aligned reads"
                },
                "max_insert_size": {
                    "name": "Max Insert Size",
                    "type": "number",
                    "description": "Maximum fragment size to consider. Only values > 0 are considered"
                },
                "min_insert_size": {
                    "name": "Min Insert Size",
                    "type": "number",
                    "description": "Minimum fragment size to consider. Only values > 0 are considered"
                },
                "max_restriction_fragment_size": {
                    "name": "Max Restriction Fragment Size",
                    "type": "number",
                    "description": "Maximum restriction fragment size to consider. Only values > 0 are considered"
                },
                "min_restriction_fragment_size": {
                    "name": "Min Restriction Fragment Size",
                    "type": "number",
                    "description": "Minimum restriction fragment size to consider. Only values > 0 are considered"
                },
                "save_interaction_bam": {
                    "name": "Save Interaction Bam",
                    "type": "boolean",
                    "description": "Save a BAM file where all reads are flagged by their interaction classes"
                },
                "save_pairs_intermediates": {
                    "name": "Save Pairs Intermediates",
                    "type": "boolean",
                    "description": "Save all types of non valid read pairs in distinct output files"
                }
            }
        },
        {
            "name": "Contact maps",
            "description": "Options to build Hi-C contact maps",
            "advanced": true,
            "params": {
                "bin_size": {
                    "name": "Bin Size",
                    "type": "string",
                    "default": "1000000,500000",
                    "description": "Resolution to build the maps (comma separated)"
                },
                "hicpro_maps": {
                    "name": "Hicpro Maps",
                    "type": "boolean",
                    "description": "Generate raw and normalized contact maps with HiC-Pro"
                },
                "ice_filter_low_count_perc": {
                    "name": "Ice Filter Low Count Perc",
                    "type": "number",
                    "default": 0.02,
                    "description": "Filter low counts rows before HiC-Pro normalization"
                },
                "ice_filter_high_count_perc": {
                    "name": "Ice Filter High Count Perc",
                    "type": "number",
                    "description": "Filter high counts rows before HiC-Pro normalization"
                },
                "ice_eps": {
                    "name": "Ice Eps",
                    "type": "number",
                    "default": 0.1,
                    "description": "Threshold for HiC-Pro ICE convergence"
                },
                "ice_max_iter": {
                    "name": "Ice Max Iter",
                    "type": "number",
                    "default": 100,
                    "description": "Maximum number of iteraction for HiC-Pro ICE normalization"
                },
                "save_raw_maps": {
                    "name": "Save Raw Maps",
                    "type": "boolean",
                    "description": "Save raw contact maps"
                }
            }
        },
        {
            "name": "Downstream Analysis",
            "description": "Set up downstream analysis from contact maps",
            "advanced": true,
            "params": {
                "tads_caller": {
                    "name": "Tads Caller",
                    "type": "string",
                    "default": "hicexplorer,insulation",
                    "description": "Define methods for TADs calling"
                },
                "res_tads": {
                    "name": "Res Tads",
                    "type": "string",
                    "default": "40000,20000",
                    "description": "Resolution to run TADs callers (comma separated)"
                }
            }
        },
        {
            "name": "Skip options",
            "description": "Skip some steps of the pipeline",
            "advanced": true,
            "params": {
                "skip_maps": {
                    "name": "Skip Maps",
                    "type": "boolean",
                    "description": "Do not build contact maps"
                },
                "skip_dist_decay": {
                    "name": "Skip Dist Decay",
                    "type": "boolean",
                    "description": "Do not run distance/decay plot"
                },
                "skip_tads": {
                    "name": "Skip Tads",
                    "type": "boolean",
                    "description": "Do not run TADs calling"
                },
                "skip_compartments": {
                    "name": "Skip Compartments",
                    "type": "boolean",
                    "description": "Do not run compartments calling"
                },
                "skip_balancing": {
                    "name": "Skip Balancing",
                    "type": "boolean",
                    "description": "Do not run cooler balancing normalization"
                },
                "skip_mcool": {
                    "name": "Skip Mcool",
                    "type": "boolean",
                    "description": "Do not generate mcool file for Higlass visualization"
                },
                "skip_multiqc": {
                    "name": "Skip Multiqc",
                    "type": "boolean",
                    "description": "Do not generate MultiQC report"
                }
            }
        }
    ],
    "outputs": [
        {
            "name": "Compartments calling",
            "description": "Compartments calling is one of the most common analysis which aims at detecting A (open, active) / B (close, inactive) compartments.",
            "filetype": ".*\\.(tsv|txt)$",
            "process": "COOLTOOLS_EIGSCIS"
        },
        {
            "name": "TAD Insulation scores",
            "description": "Insulation score using the cooltools package.",
            "filetype": "tsv",
            "process": "COOLTOOLS_INSULATION"
        },
        {
            "name": "HiCExplorer TADs calling",
            "description": "TADs calling using the HiCExplorer package.",
            "filetype": ".*\\.(bed|gff|bedgraph|npz|bm|h5)$",
            "process": "HIC_FIND_TADS"
        },
        {
            "name": "Quality control report",
            "description": "MultiQC report of important quality control metrics.",
            "filetype": "html",
            "process": "MULTIQC"
        }
    ]
}
